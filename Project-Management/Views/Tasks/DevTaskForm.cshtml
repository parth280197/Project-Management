@model Project_Management.ViewModels.DevTaskViewModel

@{
  ViewBag.Title = "TaskFormForDevelopers";
}

<h2>Update Task Status</h2>


@using (Html.BeginForm("DevUpdateTask", "Tasks"))
{
  @Html.AntiForgeryToken()

<div class="form-horizontal">
  <hr />
  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  @Html.HiddenFor(model => model.Id)

  <div class="form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
      @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
      @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
  </div>


  <div class="form-group">
    @Html.LabelFor(model => model.Deadline, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.TextBoxFor(model => model.Deadline, "{0:d MMM yyyy}", new { @class = "form-control datepicker", disabled = "disabled", @readonly = "readonly" })
      @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EnumDropDownListFor(model => model.Priority, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
      @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.CompletedPercentage, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.CompletedPercentage, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.CompletedPercentage, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    <div class="col-md-offset-2 col-md-10">
      @Html.HiddenFor(model => model.ProjectId)
      <input type="submit" value="Update" class="btn btn-default" />
    </div>
  </div>
</div>
}

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
